import openai
# Set the API key from the environment variable
openai.api_key = "sk-None-biyzAFdK3naS9mnvlPAmT3BlbkFJKkdrNsx6BrlkWBXSc9tl"

message = """
–î–æ–±—Ä–æ–≥–æ –¥–Ω—è ü™ê –í –¥–≤—É—Ö–∫–æ–º–Ω–∞—Ç–Ω–æ–π –∫–≤–∞—Ä—Ç–∏—Ä–µ —Å–¥–∞–µ—Ç—Å—è –æ–¥–Ω–∞ –∫–æ–º–Ω–∞—Ç–∞. –¢–æ–ª—å–∫–æ –¥–ª—è –¥–µ–≤—É—à–∫–∏ –∏–ª–∏ –¥–µ–≤—É—à–µ–∫. –ú–æ–∂–µ—Ç–µ –∂–∏—Ç—å —Å –ø–æ–¥—Ä—É–≥–æ–π –∏–ª–∏ –æ–¥–Ω–∞.
‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç –≤ –∫–≤–∞—Ä—Ç–∏—Ä–µ: 2
‚úÖ –≠—Ç–∞–∂: 7
‚úÖ –°—Ç–∏—Ä–∞–ª—å–Ω–∞—è –º–∞—à–∏–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç
‚úÖ –•–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫
‚úÖ –û—Ç–¥–µ–ª—å–Ω—ã–π –≥–∞—Ä–¥–µ—Ä–æ–±
‚úÖ –ü–æ–ª–Ω–æ—Å—Ç—å—é –º–µ–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π
‚úÖ –ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä
–¶–µ–Ω–∞: 100.000 —Ç–µ–Ω–≥–µ –∏ –∫–æ–º —É—Å–ª—É–≥–∞. 30.000 —Ç–≥ –≤–æ–∑–≤—Ä–∞—Ç–Ω—ã–π –¥–µ–ø–æ–∑–∏—Ç
–ê–¥—Ä–µ—Å: –ê–∫—Å–∞–π - 1–∞, 29

–¢–µ–ª: 8 7087086241
"""

prompt = f"""
Extract structured data from this message. Returned data should include and return in json format:
city: string (If the message contains a city name, extract it; otherwise, return null)
district: string (If the message contains a district name, extract it; otherwise, return null)
address: string (If the message contains a full address with a street name and number, extract it; if it only contains the name of a residential complex, extract that; otherwise, return null)
cost: integer (Extract the cost value if present, excluding currency; otherwise, return null)
gender: string (If the message specifies a preferred gender, extract "male" or "female"; otherwise, return null)
people_needed: integer (If the message specifies the number of people being sought, extract the number; otherwise, return null)
long_term: boolean (If the message mentions long-term, return true. If short-term, return false. If no term is mentioned, return null)
phone_number: string (If the message contains a phone number, extract it; otherwise, return null)
utilities: boolean (If the message mentions –∫–æ–º–º—É–Ω–∞–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏ (utilities) cost, return true; otherwise, return false if there nothing about it then null)
deposit: integer (If the message mentions a deposit amount, extract the value; otherwise, return null)

Message:
{message}
"""

# Create a chat completion using the appropriate chat endpoint
completion = openai.ChatCompletion.create(
    model="gpt-4",
    messages=[
        {"role": "system", "content": "You are a helpful assistant."},
        {"role": "user", "content": prompt}
    ]
)

# Print the generated text from the model
print(completion.choices[0].message['content'])
